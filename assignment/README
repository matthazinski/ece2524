This assignment is relevant to this course because it emphasizes software development using the Unix design philosophy. A web server is a good exercise in the "Rule of Separation" because it requires that the underlying data be entirely separated from the mechanism for presenting. Additionally, it uses simple Unix interfaces such as flat text files and sockets. The requirements that code be structured in a modular way  and use exceptions are done so as to adhere to the rules of robustness, modularity, repair, and transparency. Exceptions in particular are important because it allows errors to be dealt with more robustly than if-statements, which tend to hide errors from both the user and other portions of the program.

A grading rubric is provided in assignment.md. In summary, it gives 60% of the available points to the functionality of the program and 40% to style, with up to 10% extra credit available for implementing multithreading. On the functionality side, partial credit should be given to students based on the portion of their web server that is working. On the style side, programs are graded on robustness and ease of modifying for developers. Comments, use of exceptions, documentation, and separation into files, objects, and functions are all expected to be included in student projects. 
